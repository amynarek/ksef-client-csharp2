root = true

[*.{cs,vb}]
# --- Zakaz 'var' ---
csharp_style_var_for_built_in_types = false
csharp_style_var_when_type_is_apparent = false
csharp_style_var_elsewhere = false
dotnet_diagnostic.IDE0008.severity = error   # u?yj typu zamiast 'var'

# --- Klamry preferowane ---
csharp_prefer_braces = true
dotnet_diagnostic.IDE0011.severity = warning

# --- Jawne modyfikatory ---
dotnet_style_require_accessibility_modifiers = always
dotnet_diagnostic.IDE0040.severity = warning

# --- Async nazewnictwo ---
dotnet_naming_rule.async_methods_end_with_async.severity = error
dotnet_naming_rule.async_methods_end_with_async.symbols  = async_methods
dotnet_naming_rule.async_methods_end_with_async.style    = end_with_async
dotnet_naming_symbols.async_methods.applicable_kinds = method
dotnet_naming_symbols.async_methods.required_modifiers = async
dotnet_naming_style.end_with_async.required_suffix = Async

# --- Prywatne pola: _camelCase ---
dotnet_naming_rule.private_fields_underscore.severity = warning
dotnet_naming_rule.private_fields_underscore.symbols  = private_fields
dotnet_naming_rule.private_fields_underscore.style    = underscore_prefix
dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private
dotnet_naming_style.underscore_prefix.required_prefix = _

# (opcjonalnie) public API: PascalCase
dotnet_naming_rule.public_members_pascal.severity = warning
dotnet_naming_rule.public_members_pascal.symbols  = public_members
dotnet_naming_rule.public_members_pascal.style    = pascalcase
dotnet_naming_symbols.public_members.applicable_accessibilities = public, protected, protected_internal
dotnet_naming_symbols.public_members.applicable_kinds = property, method, field, event, delegate
dotnet_naming_style.pascalcase.capitalization = pascal_case
